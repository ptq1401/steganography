# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'encode.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog
from main import encode,create,update_notify
from LSBSteg import LSBSteg
import cv2
import os

class Ui_ENCODING(object):
    def setupUi(self, ENCODING):
        ENCODING.setObjectName("ENCODING")
        ENCODING.resize(1300, 800)
        ENCODING.setMinimumSize(QtCore.QSize(1300, 800))
        ENCODING.setMaximumSize(QtCore.QSize(1300, 800))
        ENCODING.setStyleSheet("background: rgb(240, 240, 240)")
        self.centralwidget = QtWidgets.QWidget(ENCODING)
        self.centralwidget.setObjectName("centralwidget")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(30, 10, 450, 35))
        self.lineEdit.setStyleSheet("background: rgb(255, 255, 255)")
        self.lineEdit.setObjectName("lineEdit")
        self.Text_But = QtWidgets.QPushButton(self.centralwidget)
        self.Text_But.setGeometry(QtCore.QRect(500, 10, 90, 35))
        self.Text_But.setStyleSheet("background: rgb(255, 255, 255)")
        self.Text_But.setObjectName("Text_But")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(700, 10, 450, 35))
        self.lineEdit_2.setStyleSheet("background: rgb(255, 255, 255)")
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.Ima_But = QtWidgets.QPushButton(self.centralwidget)
        self.Ima_But.setGeometry(QtCore.QRect(1170, 10, 90, 35))
        self.Ima_But.setStyleSheet("background: rgb(255, 255, 255)")
        self.Ima_But.setObjectName("Ima_But")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(30, 50, 441, 21))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(True)
        font.setWeight(50)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(700, 50, 441, 21))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(True)
        font.setWeight(50)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.back = QtWidgets.QPushButton(self.centralwidget)
        self.back.setGeometry(QtCore.QRect(1170, 740, 90, 35))
        self.back.setStyleSheet("background: rgb(255, 255, 255)")
        self.back.setObjectName("back")
        self.continue_2 = QtWidgets.QPushButton(self.centralwidget)
        self.continue_2.setGeometry(QtCore.QRect(1060, 740, 90, 35))
        self.continue_2.setStyleSheet("background: rgb(255, 255, 255)")
        self.continue_2.setObjectName("continue_2")
        self.listWidget = QtWidgets.QListWidget(self.centralwidget)
        self.listWidget.setGeometry(QtCore.QRect(30, 80, 1240, 640))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.listWidget.setFont(font)
        self.listWidget.setLocale(QtCore.QLocale(QtCore.QLocale.Vietnamese, QtCore.QLocale.Vietnam))
        self.listWidget.setStyleSheet("background: rgb(255, 255, 255)")
        self.listWidget.setObjectName("listWidget")
        ENCODING.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(ENCODING)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1300, 26))
        self.menubar.setObjectName("menubar")
        ENCODING.setMenuBar(self.menubar)
        self.but_choose_folder = 'OFF'
        self.but_choose_file = 'OFF'
        self.Ima_But.clicked.connect(self.folder_path)
        self.Text_But.clicked.connect(self.file_path)
        self.continue_2.clicked.connect(self.continue_but)

        self.retranslateUi(ENCODING)
        QtCore.QMetaObject.connectSlotsByName(ENCODING)

    def folder_path(self):
        self.folder_name = QtWidgets.QFileDialog.getExistingDirectory(None, "Select choose folder")
        self.lineEdit_2.setText(self.folder_name)
        self.but_choose_folder = 'ON'
        if os.path.isdir(self.folder_name):
            list = os.listdir(self.folder_name)
            number_files = len(list)
            self.listWidget.addItem('There are ' + str(number_files) + ' images in the folder')
        else:
            return
    
    def file_path(self):
        self.file_Name = QFileDialog.getOpenFileName(None,"open file","","Text files (*.txt)")[0]
        self.lineEdit.setText(self.file_Name)
        self.but_choose_file = 'ON'
        if os.path.isfile(self.file_Name):
            f = open(self.file_Name, 'r',encoding = 'utf-8')
            words = 1
            while True:
                data = f.read(1)
                if data == " ":
                    words = words + 1
                if data == '':
                    break
            self.listWidget.addItem('There are ' + str(words) + ' words in the message')
            self.listWidget.addItem('Need about ' + str(round(words/200)) + ' images')
        else:
            return

    def continue_but(self):
        if (self.but_choose_folder != 'ON') or (self.but_choose_file != 'ON'):
            self.listWidget.addItem('Please choose image folder or text file. . .')
            return
        else:
            self.listWidget.addItem('Loading. . . . . . . . . . . . . . .')
        folder_path = os.path.split(self.folder_name)
        name_excel = "compare_image.xlsx"
        name_folder = "stego_image"
        new_folder_path = os.path.join(folder_path[0],name_folder)
        file_excel_path = os.path.join(folder_path[0],name_excel)
        create(new_folder_path,file_excel_path)
        encode(new_folder_path,self.folder_name,file_excel_path,self.file_Name)
        for file in os.listdir(new_folder_path):
            imagesteg_path= os.path.join(new_folder_path,file)
            im = cv2.imread(imagesteg_path)
            steg = LSBSteg(im)
            self.listWidget.addItem('Message in ' + file + ':')
            self.listWidget.addItem(steg.decode_text())
        list_1 = os.listdir(new_folder_path)
        number_files_1 = len(list_1)
        self.listWidget.addItem('. . . . . . . . . . . . . .')
        self.listWidget.addItem(update_notify())
        self.listWidget.addItem('Used ' + str(number_files_1) + ' image to hide the message')
        self.listWidget.addItem('A folder has been created: ' + folder_path[0] + '/' + name_folder)
        self.listWidget.addItem('A file has been created: ' + folder_path[0] + '/' + name_excel)
        self.listWidget.addItem('Finished')

    def retranslateUi(self, ENCODING):
        _translate = QtCore.QCoreApplication.translate
        ENCODING.setWindowTitle(_translate("ENCODING", "Encoding"))
        self.Text_But.setText(_translate("ENCODING", "Select File"))
        self.Ima_But.setText(_translate("ENCODING", "Select Folder"))
        self.label.setText(_translate("ENCODING", "Select the file containing the message (required)"))
        self.label_2.setText(_translate("ENCODING", "Select the folder containing the image (required)"))
        self.back.setText(_translate("ENCODING", "Back"))
        self.continue_2.setText(_translate("ENCODING", "Continue"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    ENCODING = QtWidgets.QMainWindow()
    ui = Ui_ENCODING()
    ui.setupUi(ENCODING)
    ENCODING.show()
    sys.exit(app.exec_())
